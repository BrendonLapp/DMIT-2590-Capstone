@model IEnumerable<Capstone.Web.Models.Employee.ListEmployeeViewModel>
@using Capstone.BLL.Security

@{
    ViewBag.Title = "All Employees";
}
@if (User.Identity.IsAuthenticated && User.IsInRole(SecurityRoles.GlobalAdminRole))
{
<script type="text/javascript">

        document.addEventListener("DOMContentLoaded", function (event) {
            var teamDdl = document.getElementById("TeamID");
            teamDdl.addEventListener('change', function (evt) {
                var teamID = 0;

                var teamName = teamDdl.options[teamDdl.selectedIndex].text;
                if (teamName == "All Teams")
                    teamID == 0;
                else
                    teamID = teamDdl.options[teamDdl.selectedIndex].value;
                console.log('selected team -' + teamName + ' in id ' + teamID);
                $.ajax({
                    url: "../EmployeeView/GetEmployeesByTeam",
                    data: { teamID: teamID },
                    cache: false,
                    type: "POST",
                    dataType: "html",
                    success: function (data, textStatus, XMLHttpRequest) {
                        $("#partialView").html(data); //replace the current table
                    }
                });
            });
        });

</script>
}
<h2>All Employees</h2>
<p>
    @Html.ActionLink("Create New", "Create")
</p>

<p class="alert-info">@TempData["message"]</p>
@if (User.Identity.IsAuthenticated && User.IsInRole(SecurityRoles.GlobalAdminRole))
    {
<div class="form-group">
    <div>
        @Html.DropDownList("TeamID", null, new { htmlAttributes = new { @class = "form-control" } })
    </div>
</div>
    }

<div id="partialView">@Html.Partial("_EmployeeView")</div>
@*<table class="table">
        <tr>
            <th>
                First Name
            </th>
            <th>
                Last Name
            </th>
            <th>
                Position
            </th>
            <th>
                Role
            </th>
            <th>
                Team
            </th>
            <th>
                User ID
            </th>
            <th>
                Phone Number
            </th>
            <th>
                Alternate Phone Number
            </th>
            <th>
                Company Number
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PositionTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RoleTitle)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TeamName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AlternatePhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CompanyPhoneNumber)
            </td>
            <td class="buttoncolumn">
                <div class="custombuttons">
                    @Html.ActionLink("Edit", "Edit", new { employeeID = item.EmployeeID })
                </div>
                <div class="custombuttons">
                    @Html.ActionLink("Deactivate", "Delete", new { employeeID = item.EmployeeID })
                </div>
                <div class="custombuttons">
                    @Html.ActionLink("Details", "Details", new { employeeID = item.EmployeeID })
                </div>
            </td>
        </tr>
        }

    </table>*@
