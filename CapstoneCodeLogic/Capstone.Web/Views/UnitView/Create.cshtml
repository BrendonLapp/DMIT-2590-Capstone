@model Capstone.Web.Models.UnitViewModel

@{
    ViewBag.Title = "Unit";
}

<h2>Create Unit</h2>


@using (Html.BeginForm())
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    <div class="titlebox">
        New Unit
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.AreaID, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 removefloat">
            @Html.DropDownList("AreaID", null, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AreaID, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.UnitName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 removefloat">
            @Html.EditorFor(model => model.UnitName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 removefloat">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ActivationDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 removefloat">
            @Html.EditorFor(model => model.ActivationDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.ActivationDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DeactivationDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10 removefloat">
            @Html.EditorFor(model => model.DeactivationDate, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
            @Html.ValidationMessageFor(model => model.DeactivationDate, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group buttonrow">
        <div>
            <a href="~/UnitView/Index" class="btn btn-default cancelButton">Cancel</a>
        </div>
        <div>
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script src="~/Scripts/DatePicker.js"></script>
    <script type="text/javascript">

        $('input[type=text]').each(function () {
            var req = $(this).attr('data-val-required');
            if (undefined != req) {
                var label = $('label[for="' + $(this).attr('id') + '"]');
                var text = label.text();
                if (text.length > 0) {
                    label.append('<span style="color:red"> *</span>');
                }
            }
        });

        $('input[type=datetime]').each(function () {
            var req = $(this).attr('data-val-required');
            if (undefined != req) {
                var label = $('label[for="' + $(this).attr('id') + '"]');
                var text = label.text();
                if (text.length > 0) {
                    label.append('<span style="color:red"> *</span>');
                }
            }
        });
    </script>
}
